(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{352:function(t,e,n){"use strict";n.r(e);var a=n(9),s=Object(a.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"前集回顾"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#前集回顾"}},[t._v("#")]),t._v(" 前集回顾")]),t._v(" "),n("p",[n("a",{attrs:{href:"http://leftstick.github.io/tech/2016/04/09/angular2-01-env",target:"_blank",rel:"noopener noreferrer"}},[t._v("上一章"),n("OutboundLink")],1),t._v("里我们讲了如何为"),n("code",[t._v("angular2")]),t._v("搭建开发环境(还没搭起来的赶紧去看哦)，并使之跑起来我们的第一个“My First Angular 2 App”。当然也有不少朋友反映环境搭建似乎比较复杂，整整一篇教程，最后只简单输出了一句话！这里我要说一句，学习新知识的确有一个阵痛的过程，尤其像"),n("code",[t._v("angular2")]),t._v("这种框架，引入了大量以前“前端”并不关心(没有需求)的技术栈，这使得对于之前没有接触过这些概念的朋友的学习曲线陡然飙升，相信不少人看了"),n("a",{attrs:{href:"http://leftstick.github.io/tech/2016/04/09/angular2-01-env",target:"_blank",rel:"noopener noreferrer"}},[t._v("上一章"),n("OutboundLink")],1),t._v("里开篇时的那些名词后已经认识到这一点了！本教程主打实际操作，但也不会完全忽略理论，我们边做边理解。今天就接着"),n("a",{attrs:{href:"http://leftstick.github.io/tech/2016/04/09/angular2-01-env",target:"_blank",rel:"noopener noreferrer"}},[t._v("上一章"),n("OutboundLink")],1),t._v("的余温，我们来写一个简单"),n("code",[t._v("component")]),t._v("。")]),t._v(" "),n("p",[t._v("本章源码："),n("a",{attrs:{href:"https://github.com/leftstick/angular2-lesson/tree/master/examples/component",target:"_blank",rel:"noopener noreferrer"}},[t._v("component"),n("OutboundLink")],1)]),t._v(" "),n("p",[t._v("本章使用"),n("code",[t._v("angular2")]),t._v("版本为："),n("code",[t._v("2.0.0-rc.1")])]),t._v(" "),n("p",[t._v("先来看看我们将要完成的效果图：")]),t._v(" "),n("img",{attrs:{src:t.$withBase("/images/angular2-02-preview.gif"),alt:"angular"}}),t._v(" "),n("p",[t._v("(注意动画的部分)非常简单的一个"),n("code",[t._v("component")]),t._v("，有木有？那好，我们现在要做的就是为这样一个"),n("code",[t._v("component")]),t._v("描述需求：")]),t._v(" "),n("ol",[n("li",[t._v("她要能接受一个"),n("code",[t._v("object")]),t._v("用来描述初始值，如："),n("code",[t._v("isChecked")]),t._v("(是否选中)、 "),n("code",[t._v("txt")]),t._v("(显示文本)")]),t._v(" "),n("li",[t._v("当选中时，需要有横线覆盖文本；反之亦然")]),t._v(" "),n("li",[t._v("当用户点击复选框时，需要向上广播该事件，由父组件(调用方)决定点击时该做什么。这里我们需要在父组件里改变"),n("code",[t._v("component")]),t._v("的"),n("code",[t._v("isChecked")]),t._v("状态，并使"),n("code",[t._v("component")]),t._v("重绘")]),t._v(" "),n("li",[t._v("她必须是一个处理"),n("a",{attrs:{href:"https://medium.com/@AdamRNeary/unidirectional-data-flow-yes-flux-i-am-not-so-sure-b4acf988196c#.bxd6ripaq",target:"_blank",rel:"noopener noreferrer"}},[t._v("Unidirectional Data Flow"),n("OutboundLink")],1),t._v("(单向数据流)的"),n("code",[t._v("component")]),t._v("，意思是传入参数必须"),n("a",{attrs:{href:"http://leftstick.github.io/tech/2016/04/09/immutability-in-javascript",target:"_blank",rel:"noopener noreferrer"}},[t._v("不可变(Immutable)"),n("OutboundLink")],1)])]),t._v(" "),n("blockquote",[n("p",[t._v("注：第4步里，我们使用"),n("code",[t._v("Unidirectional Data Flow")]),t._v("模型来更新数据，并没有涉及到任何"),n("a",{attrs:{href:"https://en.wikipedia.org/wiki/Reactive_programming",target:"_blank",rel:"noopener noreferrer"}},[t._v("Reactive Programming"),n("OutboundLink")],1),t._v("的知识点")])]),t._v(" "),n("p",[t._v("为了完成以上需求，我们需要了解下面知识点")]),t._v(" "),n("h2",{attrs:{id:"什么是component"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#什么是component"}},[t._v("#")]),t._v(" 什么是"),n("code",[t._v("component")])]),t._v(" "),n("p",[t._v("或者这么问，"),n("a",{attrs:{href:"https://angularjs.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("AngularJS"),n("OutboundLink")],1),t._v("里有"),n("a",{attrs:{href:"https://docs.angularjs.org/guide/directive",target:"_blank",rel:"noopener noreferrer"}},[t._v("directive"),n("OutboundLink")],1),t._v("；"),n("a",{attrs:{href:"https://angular.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("angular2"),n("OutboundLink")],1),t._v("里有"),n("code",[t._v("component")]),t._v("，他们是什么关系？该如何理解"),n("a",{attrs:{href:"https://angular.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("angular2"),n("OutboundLink")],1),t._v("里的"),n("code",[t._v("component")]),t._v("？原谅我这里就不再详述"),n("a",{attrs:{href:"https://angularjs.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("AngularJS"),n("OutboundLink")],1),t._v("里的"),n("a",{attrs:{href:"https://docs.angularjs.org/guide/directive",target:"_blank",rel:"noopener noreferrer"}},[t._v("directive"),n("OutboundLink")],1),t._v("了，直接介绍"),n("code",[t._v("component")]),t._v("：")]),t._v(" "),n("ol",[n("li",[n("code",[t._v("Component")]),t._v("： 简单说，就是带"),n("code",[t._v("template")]),t._v("的"),n("code",[t._v("directive")]),t._v("，也是最常见的组件形式。譬如："),n("a",{attrs:{href:"http://leftstick.github.io/tech/2016/04/09/angular2-01-env",target:"_blank",rel:"noopener noreferrer"}},[t._v("上一章"),n("OutboundLink")],1),t._v("中，"),n("code",[t._v("ts/app.ts")]),t._v("里的"),n("code",[t._v("AppComponent")]),t._v("。")]),t._v(" "),n("li",[n("code",[t._v("Structural directive")]),t._v("： 通过增加/删除"),n("code",[t._v("DOM")]),t._v("元素改变"),n("code",[t._v("DOM")]),t._v("布局的"),n("code",[t._v("directive")]),t._v("。譬如："),n("a",{attrs:{href:"https://angular.io/docs/ts/latest/guide/template-syntax.html#ng-for",target:"_blank",rel:"noopener noreferrer"}},[t._v("NgFor"),n("OutboundLink")],1),t._v("和"),n("a",{attrs:{href:"https://angular.io/docs/ts/latest/guide/template-syntax.html#ng-if",target:"_blank",rel:"noopener noreferrer"}},[t._v("NgIf"),n("OutboundLink")],1)]),t._v(" "),n("li",[n("code",[t._v("Attribute directive")]),t._v("： 控制"),n("code",[t._v("DOM")]),t._v("元素显示/隐藏，或者改变元素行为的"),n("code",[t._v("directive")]),t._v("。譬如："),n("a",{attrs:{href:"https://angular.io/docs/ts/latest/guide/template-syntax.html#ng-style",target:"_blank",rel:"noopener noreferrer"}},[t._v("NgStyle"),n("OutboundLink")],1)])]),t._v(" "),n("h2",{attrs:{id:"设计use-case"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#设计use-case"}},[t._v("#")]),t._v(" 设计use case")]),t._v(" "),n("p",[t._v("看过我之前介绍"),n("a",{attrs:{href:"http://leftstick.github.io/tech/2016/03/18/write-di-in-bdd",target:"_blank",rel:"noopener noreferrer"}},[t._v("以BDD手写依赖注入(dependency injection)"),n("OutboundLink")],1),t._v('的朋友应该已经对"行为驱动"多少有些了解了。当我们需要设计一个API或者组件时，最佳的方式就是先设计她的使用场景，从行为开始，对该API或者组件进行描述，最后再将缺失的“实现”部分补全就可以了。')]),t._v(" "),n("p",[t._v("假设我们将在"),n("a",{attrs:{href:"http://leftstick.github.io/tech/2016/04/09/angular2-01-env",target:"_blank",rel:"noopener noreferrer"}},[t._v("上一章"),n("OutboundLink")],1),t._v("中的"),n("code",[t._v("AppComponent")]),t._v("里使用这个新的"),n("code",[t._v("component")]),t._v("，根据之前的需求描述，我们的使用场景应该是这个样子的 :")]),t._v(" "),n("div",{staticClass:"language-javascript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("Component"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" OnInit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@angular/core'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//这里CheckableItem就是我们即将设计的新component")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("CheckableItem"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Item"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./CheckableItem'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//该component使用checkable-item作为selector")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//并可以通过[item]属性传入一个object")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//还可以通过(onItemClicked)接受一个点击事件")]),t._v("\n@"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Component")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    selector"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'my-app'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    template"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('\n    <h1>My First Angular 2 App</h1>\n    <checkable-item [item]="itemInfo" (onItemClicked)="toggle($event)">\n    </checkable-item>\n    ')]),n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//引入新的CheckableItem，使之可以在AppComponent里使用")]),t._v("\n    directives"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("CheckableItem"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AppComponent")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("OnInit")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    itemInfo"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Item"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//当实现OnInit接口时，必须重写ngOnInit方法")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//关于OnInit，详见：")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//https://angular.io/docs/ts/latest/guide/lifecycle-hooks.html#!#hooks-overview")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ngOnInit")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//设定初始值")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//根据需求第1条，包含两个属性")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("itemInfo "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            isChecked"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            txt"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello World!'")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//根据需求第3条，点击component后，事件要")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//冒泡到父组件(调用方)")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("toggle")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("item"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Item")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//当获取到CheckableItem的点击事件时，")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//给itemInfo重新赋值，并将isChecked置反")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//注：重新赋值是根据需求第4条的不可变性")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("itemInfo "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            isChecked"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("item"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("isChecked"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            txt"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" item"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("txt\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("根据上述介绍，再结合之前的效果图，我们要做的当然就是一个标准的"),n("code",[t._v("Component")]),t._v("。她有"),n("code",[t._v("template")]),t._v("，并且包含了至少一个"),n("code",[t._v("input")]),t._v("和一个"),n("code",[t._v("label")]),t._v("标签。")]),t._v(" "),n("p",[t._v("有了使用场景(行为)，接下来就是实现这个"),n("code",[t._v("CheckableItem")]),t._v("了：")]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("touch")]),t._v(" ts/CheckableItem.ts\n")])])]),n("p",[t._v("向刚创建的"),n("code",[t._v("ts/CheckableItem.ts")]),t._v("文件里写入如下内容：")]),t._v(" "),n("div",{staticClass:"language-javascript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("Component"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Input"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Output"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EventEmitter"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ChangeDetectionStrategy"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@angular/core'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n@"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Component")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//脏检查策略，OnPush指当且仅当传入参数的reference发生变更时")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//触发组件重绘。这和React中的shouldComponentUpdate异曲同工，")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//不过更先进(因为React还是需要手动实现的)")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//这也是上一步里itemInfo必须重新赋值的原因")]),t._v("\n    changeDetection"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ChangeDetectionStrategy"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("OnPush"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    selector"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'checkable-item'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//仅在当前component作用域下有效的class")]),t._v("\n    styles"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("\n        .deleted{\n            text-decoration: line-through;\n        }\n    ")]),n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//template就如我们需求里的描述那样，由一个input标签和")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//一个label标签组成")]),t._v("\n    template"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('\n    <div>\n        <input type="checkbox" [ngModel]="item.isChecked" (click)="clickItem($event)">\n        <label [class.deleted]="item.isChecked">{{ item.txt }}</label>\n    </div>\n    ')]),n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CheckableItem")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//item被声明为Input，即会在父组件传入参数时用到")]),t._v("\n    @"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Input")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" item"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Item"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//onItemClicked被声明为Output，用来在用户点击input标签")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//时向上冒泡事件")]),t._v("\n    @"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Output")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" onItemClicked "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EventEmitter")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//监听input上的click事件，当用户点击时，首先阻止默认行为")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//因为是否变化(重绘)是由父组件决定的")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//然后冒泡点击事件")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("clickItem")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("e"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" MouseEvent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        e"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("preventDefault")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("onItemClicked"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("emit")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("item"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ToggleItemHandler")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("item"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Item"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Item")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    isChecked"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" boolean"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    txt"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" string"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("有朋友看到这里，对"),n("code",[t._v("[]")]),t._v("、 "),n("code",[t._v("()")]),t._v("之类的绑定标签表示不解，这里我们统一来解释：")]),t._v(" "),n("ol",[n("li",[n("code",[t._v('[target] = "expression"')]),t._v("，将右边表达式对应的值绑定到左边的"),n("code",[t._v("target")]),t._v("。譬如：在"),n("code",[t._v("ts/app.ts")]),t._v("里，我们使用"),n("code",[t._v('[item]="itemInfo"')]),t._v("将"),n("code",[t._v("itemInfo")]),t._v("对应的值绑定到了组件"),n("code",[t._v("CheckableItem")]),t._v("的"),n("code",[t._v("item")]),t._v("上，这样，在"),n("code",[t._v("CheckableItem")]),t._v("里就可以通过"),n("code",[t._v("this.item")]),t._v("获取到父组件传进来的参数了。")]),t._v(" "),n("li",[n("code",[t._v('(target) = "statement"')]),t._v("，将左边的事件传递给了右边的表达式(通常就是事件处理函数)。譬如：在"),n("code",[t._v("ts/app.ts")]),t._v("里，我们使用"),n("code",[t._v('(onItemClicked)="toggle($event)"')]),t._v("将"),n("code",[t._v("CheckableItem")]),t._v("冒泡上来的"),n("code",[t._v("onItemClicked")]),t._v("事件传递给了"),n("code",[t._v("toggle")]),t._v("函数。")]),t._v(" "),n("li",[n("code",[t._v('[class.deleted]="item.isChecked"')]),t._v("，是"),n("code",[t._v("class")]),t._v("的一种特殊用法，指当"),n("code",[t._v("item.isChecked")]),t._v("表达式为真时，为该标签的"),n("code",[t._v("class")]),t._v("里增加"),n("code",[t._v("deleted")]),t._v("；反之，则删除该标签"),n("code",[t._v("class")]),t._v("里的"),n("code",[t._v("deleted")])])]),t._v(" "),n("p",[t._v("OK，事已至此，我们是不是又该启动一把程序看看效果了？")]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" start\n")])])]),n("p",[t._v("你又看到了伟大的效果：")]),t._v(" "),n("img",{attrs:{src:t.$withBase("/images/angular2-02-preview.gif"),alt:"angular"}}),t._v(" "),n("p",[t._v("下回预告："),n("a",{attrs:{href:"http://leftstick.github.io/tech/2016/04/14/angular2-03-multicomponents",target:"_blank",rel:"noopener noreferrer"}},[t._v("小刀升级 － 多"),n("code",[t._v("component")]),t._v("协作"),n("OutboundLink")],1)])])}),[],!1,null,null,null);e.default=s.exports}}]);