(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{382:function(t,a,s){"use strict";s.r(a);var n=s(9),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("不可变性("),s("code",[t._v("Immutability")]),t._v(")是函数式编程的核心原则，在面向对象编程里也有大量应用。在这篇文章里，我会给大家秀一下到底什么是不可变性("),s("code",[t._v("Immutability")]),t._v(")、她为什么还这么屌、以及在"),s("code",[t._v("JavaScript")]),t._v("中怎么应用。")]),t._v(" "),s("h2",{attrs:{id:"什么是不可变性-immutability-？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是不可变性-immutability-？"}},[t._v("#")]),t._v(" 什么是不可变性("),s("code",[t._v("Immutability")]),t._v(")？")]),t._v(" "),s("p",[t._v("还是先来看看关于可变性("),s("code",[t._v("Mutability")]),t._v(")的教条式定义：“liable or subject to change or alteration(译者注：真他妈难翻，就简单理解成'易于改变的'吧)”。在编程领域里，我们用可变性("),s("code",[t._v("Mutability")]),t._v(")来描述这样一种对象，它在创建之后状态依旧可被改变。那当我们说不可变("),s("code",[t._v("Immutable")]),t._v(")时，就是可变("),s("code",[t._v("Mutable")]),t._v(")的对立面了(译者注：原谅我翻的废话又多起来) － 意思是，创建之后，就再也不能被修改了。")]),t._v(" "),s("p",[t._v("如果我说的又让你感到诡异了，原谅我小小的提醒一下，其实我们平时使用的很多东西事实上都是不可变的哦！")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" statement "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'I am an immutable value'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" otherStr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" statement"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("slice")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("17")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("我猜没人会吃惊，"),s("code",[t._v("statement.slice(8, 17)")]),t._v("并没有改变"),s("code",[t._v("statement")]),t._v("变量吧(译者注：如果你吃惊了，赶紧去补基本知识吧)？事实上，"),s("code",[t._v("string")]),t._v("对象上的所有方法里，没有一个会修改原"),s("code",[t._v("string")]),t._v("，它们一律返回新的"),s("code",[t._v("string")]),t._v("。原因简单了，因为"),s("code",[t._v("string")]),t._v("就是是不可变的("),s("code",[t._v("Immutable")]),t._v(") - 它们不能被修改，我们能做的就是基于原"),s("code",[t._v("string")]),t._v("操作后得到一个新"),s("code",[t._v("string")]),t._v("。")]),t._v(" "),s("p",[t._v("注意了，"),s("code",[t._v("string")]),t._v("可不是"),s("code",[t._v("JavaScript")]),t._v("里唯一内置的不可变("),s("code",[t._v("Immutable")]),t._v(")数据类型哦。"),s("code",[t._v("number")]),t._v("也是不可变("),s("code",[t._v("Immutable")]),t._v(")的。否则的话，你试想下这个表达式"),s("code",[t._v("2 + 3")]),t._v("，如果"),s("code",[t._v("2")]),t._v("的含义能被修改，那代码该怎么写啊|_|。听起来荒谬吧，但我们在编程中却常常对"),s("code",[t._v("object")]),t._v("和"),s("code",[t._v("array")]),t._v("做出这种事儿。")]),t._v(" "),s("h2",{attrs:{id:"javascript充满变化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#javascript充满变化"}},[t._v("#")]),t._v(" JavaScript充满变化")]),t._v(" "),s("p",[t._v("在"),s("code",[t._v("JavaScript")]),t._v("中，"),s("code",[t._v("string")]),t._v("和"),s("code",[t._v("number")]),t._v("从设计之初就是不可变("),s("code",[t._v("Immutable")]),t._v(")的。但是，看看下面这个关于"),s("code",[t._v("array")]),t._v("例子：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" arr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" v2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("来我问你，"),s("code",[t._v("v2")]),t._v("的值是什么？如果"),s("code",[t._v("array")]),t._v("和"),s("code",[t._v("string")]),t._v("、"),s("code",[t._v("number")]),t._v("一样也是不可变("),s("code",[t._v("Immutable")]),t._v(")的，那此时"),s("code",[t._v("v2")]),t._v("必定是一个包含了一个数字"),s("code",[t._v("2")]),t._v("的新"),s("code",[t._v("array")]),t._v("。事实上，还真就不是那样的。这里"),s("code",[t._v("arr")]),t._v("引用的"),s("code",[t._v("array")]),t._v("被修改了，里面添了一个数字"),s("code",[t._v("2")]),t._v("，这时"),s("code",[t._v("v2")]),t._v("的值(也就是"),s("code",[t._v("arr.push(2)")]),t._v("的返回值)，其实是"),s("code",[t._v("arr")]),t._v("此时的长度 － 就是"),s("code",[t._v("1")]),t._v("。")]),t._v(" "),s("p",[t._v("试想我们拥有一个不可变的数组("),s("code",[t._v("ImmutableArray")]),t._v(")。就像"),s("code",[t._v("string")]),t._v("、"),s("code",[t._v("number")]),t._v("那样，她应该能像如下这样被使用：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" arr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ImmutableArray")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" v2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\narr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toArray")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [1, 2, 3, 4]")]),t._v("\nv2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toArray")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [1, 2, 3, 4, 5]")]),t._v("\n")])])]),s("p",[t._v("类似的，也可以有一个不可变的Map("),s("code",[t._v("ImmutableMap")]),t._v(")，理论上可以替代"),s("code",[t._v("object")]),t._v("应该于多数场景，她应该有一个"),s("code",[t._v("set")]),t._v("方法，不过这个"),s("code",[t._v("set")]),t._v("方法不会塞任何东西到原"),s("code",[t._v("Map")]),t._v("里，而是返回一个包含了塞入值的新"),s("code",[t._v("Map")]),t._v("：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" person "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ImmutableMap")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Chris'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" age"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("32")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" olderPerson "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" person"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'age'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("33")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nperson"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toObject")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// {name: 'Chris', age: 32}")]),t._v("\nolderPerson"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toObject")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// {name: 'Chris', age: 33}")]),t._v("\n")])])]),s("p",[t._v("就像"),s("code",[t._v("2 + 3")]),t._v("这个表达式里，我们不可能改变"),s("code",[t._v("2")]),t._v("或是"),s("code",[t._v("3")]),t._v("所代表的含义，一个"),s("code",[t._v("person")]),t._v("在庆祝他33岁的生日，并不会影响他曾经是32岁的事实。")]),t._v(" "),s("h2",{attrs:{id:"javascript不可变性-immutability-实战"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#javascript不可变性-immutability-实战"}},[t._v("#")]),t._v(" JavaScript不可变性("),s("code",[t._v("Immutability")]),t._v(")实战")]),t._v(" "),s("p",[s("code",[t._v("JavaScript")]),t._v("里目前还没有不可变的"),s("code",[t._v("list")]),t._v("和"),s("code",[t._v("map")]),t._v("，所以暂时我们还是需要三方库的帮助。有两个很不错的，一个是"),s("a",{attrs:{href:"https://github.com/swannodette/mori",target:"_blank",rel:"noopener noreferrer"}},[t._v("Mori"),s("OutboundLink")],1),t._v(" － 她把"),s("code",[t._v("ClojureScript")]),t._v("里持久化数据结构的API支持带到了"),s("code",[t._v("JavaScript")]),t._v("里；另一个是Facebook出品的"),s("a",{attrs:{href:"https://github.com/facebook/immutable-js",target:"_blank",rel:"noopener noreferrer"}},[t._v("immutable.js"),s("OutboundLink")],1),t._v("。后面的示例里，我将使用"),s("a",{attrs:{href:"https://github.com/facebook/immutable-js",target:"_blank",rel:"noopener noreferrer"}},[t._v("immutable.js"),s("OutboundLink")],1),t._v("，因为她的API对于"),s("code",[t._v("JavaScript")]),t._v("开发者更友好一些。")]),t._v(" "),s("p",[t._v("下面的例子里，我们使用不可变("),s("code",[t._v("Immutable")]),t._v(")知识来构建一个扫雷小游戏。扫雷的游戏面板我们用一个不可变的"),s("code",[t._v("map")]),t._v("来构建，其中"),s("code",[t._v("tiles")]),t._v("(雷区区块)部分值得关注哦，它是一个由不可变"),s("code",[t._v("map")]),t._v("组成的不可变"),s("code",[t._v("list")]),t._v("(译者注：又开始绕了)，其中每一个不可变的"),s("code",[t._v("map")]),t._v("表示一个"),s("code",[t._v("tile")]),t._v("(雷区块)。整个这个雷区面板都是由"),s("code",[t._v("JavaScript")]),t._v("的"),s("code",[t._v("object")]),t._v("和"),s("code",[t._v("array")]),t._v("组成的，最后由"),s("a",{attrs:{href:"https://github.com/facebook/immutable-js",target:"_blank",rel:"noopener noreferrer"}},[t._v("immutable.js"),s("OutboundLink")],1),t._v("的"),s("code",[t._v("fromJS")]),t._v("方法对其进行不可变化处理：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createGame")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("options")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" Immutable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fromJS")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    cols"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" options"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cols"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    rows"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" options"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rows"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    tiles"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("initTiles")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("options"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rows"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" options"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cols"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" options"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("mines"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("剩下的主要逻辑部分就是“扫雷”了，传入扫雷游戏对象(一个不可变结构)做为第一个参数，以及要“扫”的那个"),s("code",[t._v("tile")]),t._v("(雷区块)对象，最后返回新的扫雷游戏实例。以下我们就要讲到这个"),s("code",[t._v("revealTile")]),t._v("函数。当它被调用时，"),s("code",[t._v("tile")]),t._v("(雷区块)的状态就要被重置为“扫过”的状态。如果是可变编程，代码很简单：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("revealTile")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("game"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" tile")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  game"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tiles"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("tile"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("isRevealed "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("然后再来看看如果用上面介绍的不可变数据结构来编码，坦白讲，一开始代码变得都点丑了：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("revealTile")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("game"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" tile")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" updatedTile "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" game"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'tiles'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tile"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'isRevealed'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" updatedTiles "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" game"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'tiles'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tile"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" updatedTile"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" game"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'tiles'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" updatedTiles"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("我去，丑爆了有木有！")]),t._v(" "),s("p",[t._v("万幸，不可变性不止于此，一定有得救！这种需求很常见，所以工具早就考虑到了，可以这么操作：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("revealTile")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("game"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" tile")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" game"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setIn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'tiles'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" tile"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'isRevealed'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("现在"),s("code",[t._v("revealTile")]),t._v("返回一个新的实例了，新实例里其中一个"),s("code",[t._v("tile")]),t._v("(雷区块)的"),s("code",[t._v("isRevealed")]),t._v("就和之前那个"),s("code",[t._v("game")]),t._v("实例里的不一样了。这里面用到的"),s("code",[t._v("setIn")]),t._v("是一个"),s("code",[t._v("null-safe")]),t._v("(空值安全)的函数，任意"),s("code",[t._v("keyPath")]),t._v("中的"),s("code",[t._v("key")]),t._v("不存在时，都会在这个位置创建一个新的不可变"),s("code",[t._v("map")]),t._v("(译者注：这句略绕，个人认为既然这里不是主讲"),s("a",{attrs:{href:"https://github.com/facebook/immutable-js",target:"_blank",rel:"noopener noreferrer"}},[t._v("immutable.js"),s("OutboundLink")],1),t._v("，那就没必要非提一下它的这个特性，反而不清不楚，原作没细说，那我也就不多说了，有兴趣的可以"),s("a",{attrs:{href:"http://facebook.github.io/immutable-js/docs/#/Map/setIn",target:"_blank",rel:"noopener noreferrer"}},[t._v("来这里"),s("OutboundLink")],1),t._v("自己揣摩)。这个"),s("code",[t._v("null-safe")]),t._v("特性对于我们现在扫雷游戏这个例子并不合适，因为“扫”一个不存在的"),s("code",[t._v("tile")]),t._v("(雷区块)表示我们正在试图扫雷区以外的地方，那显然不对！这里需要多做一步检查，通过"),s("code",[t._v("getIn")]),t._v("方法检查"),s("code",[t._v("tile")]),t._v("(雷区块)是否存在，然后再“扫”它：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("revealTile")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("game"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" tile")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" game"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getIn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'tiles'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" tile"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v("\n    game"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setIn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'tiles'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" tile"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'isRevealed'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    game"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("如果"),s("code",[t._v("tile")]),t._v("(雷区块)不存在，我们就返回原扫雷游戏实例。这就是个可迅速上手的关于不可变性("),s("code",[t._v("Immutability")]),t._v(")的练习，想深入了解的可以看"),s("a",{attrs:{href:"http://codepen.io/SitePoint/pen/zGYZzQ",target:"_blank",rel:"noopener noreferrer"}},[t._v("codepen"),s("OutboundLink")],1),t._v("，完整的实现都在里面了。")]),t._v(" "),s("h2",{attrs:{id:"performance怎么样"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#performance怎么样"}},[t._v("#")]),t._v(" Performance怎么样?")]),t._v(" "),s("p",[t._v("你可能觉得，这他妈Performance应该low爆了吧，我只能说某些情况下你是对的。每当你想添加点东西到一个不可变("),s("code",[t._v("Immutable")]),t._v(")对象里时，她一定是先拷贝以存在值到新实例里，然后再给新实例添加内容，最后返回新实例。相比可变对象，这势必会有更多内存、计算量消耗。")]),t._v(" "),s("p",[t._v("因为不可变("),s("code",[t._v("Immutable")]),t._v(")对象永远不变，实际上有一种实现策略叫“结构共享”，使得她的内存消耗远比你想象的少。虽然和内置的"),s("code",[t._v("array")]),t._v("、"),s("code",[t._v("object")]),t._v("的“变化”相比仍然会有额外的开销，但这个开始恒定，绝对可以被不可变性("),s("code",[t._v("Immutability")]),t._v(")带来的其它众多优势所消磨、减少。在实践中，不可变性("),s("code",[t._v("Immutability")]),t._v(")带来的优势可以极大的优化程序的整体性能，即使其中的某些个别操作开销变大了。")]),t._v(" "),s("h2",{attrs:{id:"改进变更追踪"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#改进变更追踪"}},[t._v("#")]),t._v(" 改进变更追踪")]),t._v(" "),s("p",[t._v("各种UI框架里，最难的部分永远是变更追踪(译者注：或者叫“脏检查”)。这是"),s("code",[t._v("JavaScript")]),t._v("社区里的普遍问题，所以EcmaScript 7里提供了单独的API在保证Performance的前提下可以追踪变化："),s("code",[t._v("Object.observe()")]),t._v("。很多人为之激动，但也有不少人认为这个API然并卵。他们认为，在任何情况下，这个API都没很好的解决变更追踪问题：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" tiles "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" isRevealed"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" isRevealed"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nObject"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("observe")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tiles"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* ... */")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\ntiles"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("上面例子里，"),s("code",[t._v("tiles[0]")]),t._v("的变更并没有触发"),s("code",[t._v("observer")]),t._v("，所以其实这个提案即便是最简单的变更追踪也没做到。那不可变性("),s("code",[t._v("Immutability")]),t._v(")又是怎么解决的？假设有一个应用状态"),s("code",[t._v("a")]),t._v("，然后它内部有值被改变了，于是就得到了一个新的实例"),s("code",[t._v("b")]),t._v("：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 数据没变，停止操作")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("如果应用状态"),s("code",[t._v("a")]),t._v("没有被修改，那"),s("code",[t._v("b")]),t._v("就是"),s("code",[t._v("a")]),t._v("，它们指向同一个实例，"),s("code",[t._v("===")]),t._v("就够了，不用做其他事儿。当然这需要我们追踪应用状态的引用，但整个问题的复杂度被大大简化了，现在只要判断一下它们是否同一个实例的引用就好了，真心不用再去深入调查里面的某某字段是不是变了。")]),t._v(" "),s("h2",{attrs:{id:"结束语"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#结束语"}},[t._v("#")]),t._v(" 结束语")]),t._v(" "),s("p",[t._v("希望本文能某种程度上帮你了解不可变性("),s("code",[t._v("Immutability")]),t._v(")是如何帮我们优化/改进代码的，也希望这些例子从实践角度说清楚了使用方式。不可变性("),s("code",[t._v("Immutability")]),t._v(")的热度在持续增高，我确定这绝不是你今年看到的关于不可变性("),s("code",[t._v("Immutability")]),t._v(")的最后一文。同志们，是时候来一发了，我相信你用过后一定会high至的，就像我现在一样^^。")]),t._v(" "),s("p",[t._v("原文地址："),s("a",{attrs:{href:"http://www.sitepoint.com/immutability-javascript/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Immutability in JavaScript"),s("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=e.exports}}]);